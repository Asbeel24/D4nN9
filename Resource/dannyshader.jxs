<jittershader name="fill-flat-triangles">
	<description>Default Shader </description>
	<param name="position" type="vec3" state="POSITION" />
	<param name="pix2gl" type="vec2" state="0. 0." />
	<param name="tex0" type="int" default="0" />
	<param name="modelViewProjectionMatrix" type="mat4" state="MODELVIEW_PROJECTION_MATRIX" />
	<language name="glsl" version="1.5">
		<bind param="position" program="vp" />
		<bind param="pix2gl" program="vp" />
		<bind param="tex0" program="vp" />
		<bind param="modelViewProjectionMatrix" program="vp" />
		<bind param="color" program="vp" />
		<program name="vp" type="vertex">
<![CDATA[
#version 330 core
uniform mat4 modelViewProjectionMatrix;
in vec3 position;
in vec4 color;
uniform vec2 pix2gl;
uniform sampler2DRect tex0;

out jit_PerVertex {
	smooth vec4 color;	
} jit_out;

void main() {
	
	vec3 scaledPos = vec3(pisition.xy * (pix2gl / vec(1920., -1080)), 0.);	
	scaledPos = vec3(pix2gl / vec2(2., -2), 0.);
	gl_Position = modelViewProjectionMatrix * vec4(scaledPos, 1.);	
	jit_out.color = texture(tex0, position.xy);
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
#version 330 core

in jit_PerVertex {
	smooth vec4 color;
} jit_in;

out vec4 color;

void main() {
	color = jit_in.color;
}	
]]>
		</program>
	</language>
</jittershader>
